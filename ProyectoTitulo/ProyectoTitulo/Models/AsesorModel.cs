// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using ProyectoTitulo;
//
//    var asesorModel = AsesorModel.FromJson(jsonString);

/*namespace ProyectoTitulo
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class AsesorModel
    {
        public long Id { get; set; }

        
        public AsesorModelComuna Comuna { get; set; }

        public object[] PuntuacioAsesor { get; set; }

        public object[] PuntuacioCliente { get; set; }

        [JsonProperty("Servicio")]
        public object[] Servicio { get; set; }

        [JsonProperty("TareaAsesor")]
        public object[] TareaAsesor { get; set; }

        [JsonProperty("DiasAsesor")]
        public DiasAsesor[] DiasAsesor { get; set; }

        [JsonProperty("Id")]
        public long AsesorModelId { get; set; }

        [JsonProperty("Rut")]
        public long Rut { get; set; }

        [JsonProperty("Foto")]
        public object Foto { get; set; }

        [JsonProperty("Nombre")]
        public string Nombre { get; set; }

        [JsonProperty("ApellidoPaterno")]
        public string ApellidoPaterno { get; set; }

        [JsonProperty("ApellidoMaterno")]
        public string ApellidoMaterno { get; set; }

        [JsonProperty("Sexo")]
        public string Sexo { get; set; }

        [JsonProperty("FechaNacimiento")]
        public DateTimeOffset FechaNacimiento { get; set; }

        [JsonProperty("Nacionalidad")]
        public string Nacionalidad { get; set; }

        [JsonProperty("IdComuna")]
        public long IdComuna { get; set; }

        [JsonProperty("ValorHora")]
        public long ValorHora { get; set; }

        [JsonProperty("Comentario")]
        public string Comentario { get; set; }

        [JsonProperty("Fono")]
        public long Fono { get; set; }

        [JsonProperty("Correo")]
        public string Correo { get; set; }

        [JsonProperty("Contrasena")]
        public string Contrasena { get; set; }
    }

    
 

   

    public partial class ComunaElement
    {
        [JsonProperty("$ref", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Ref { get; set; }

        [JsonProperty("$id", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Id { get; set; }

        [JsonProperty("Asesor", NullValueHandling = NullValueHandling.Ignore)]
        public object[] Asesor { get; set; }

        [JsonProperty("Region", NullValueHandling = NullValueHandling.Ignore)]
        public Asesor Region { get; set; }

        [JsonProperty("Direccion", NullValueHandling = NullValueHandling.Ignore)]
        public object[] Direccion { get; set; }

        [JsonProperty("Id", NullValueHandling = NullValueHandling.Ignore)]
        public long? ComunaId { get; set; }

        [JsonProperty("IdRegion", NullValueHandling = NullValueHandling.Ignore)]
        public long? IdRegion { get; set; }

        [JsonProperty("Nombre", NullValueHandling = NullValueHandling.Ignore)]
        public string Nombre { get; set; }
    }

    public partial class DiasAsesor
    {
        [JsonProperty("$id")]
        [JsonConverter(typeof(ParseStringConverter))]
        public long Id { get; set; }

        [JsonProperty("Asesor")]
        public Asesor Asesor { get; set; }

        [JsonProperty("Dias")]
        public Dias Dias { get; set; }

        [JsonProperty("Id")]
        public long DiasAsesorId { get; set; }

        [JsonProperty("IdAsesor")]
        public long IdAsesor { get; set; }

        [JsonProperty("IdDia")]
        public long IdDia { get; set; }
    }

    public partial class Dias
    {
        [JsonProperty("$id")]
        [JsonConverter(typeof(ParseStringConverter))]
        public long Id { get; set; }

        [JsonProperty("DiasAsesor")]
        public Asesor[] DiasAsesor { get; set; }

        [JsonProperty("Id")]
        public long DiasId { get; set; }

        [JsonProperty("Dia")]
        public string Dia { get; set; }
    }

    public partial class AsesorModel
    {
        public static AsesorModel[] FromJson(string json) => JsonConvert.DeserializeObject<AsesorModel[]>(json, ProyectoTitulo.Converter.Settings);
    }

   

    internal class ParseStringConverter : JsonConverter
    {
        public override bool CanConvert(Type t) => t == typeof(long) || t == typeof(long?);

        public override object ReadJson(JsonReader reader, Type t, object existingValue, JsonSerializer serializer)
        {
            if (reader.TokenType == JsonToken.Null) return null;
            var value = serializer.Deserialize<string>(reader);
            long l;
            if (Int64.TryParse(value, out l))
            {
                return l;
            }
            throw new Exception("Cannot unmarshal type long");
        }

        public override void WriteJson(JsonWriter writer, object untypedValue, JsonSerializer serializer)
        {
            if (untypedValue == null)
            {
                serializer.Serialize(writer, null);
                return;
            }
            var value = (long)untypedValue;
            serializer.Serialize(writer, value.ToString());
            return;
        }

        public static readonly ParseStringConverter Singleton = new ParseStringConverter();
    }
}
*/